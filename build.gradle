buildscript {
    repositories {
        mavenLocal()
        mavenCentral()
    }
}

plugins {
    id 'org.springframework.boot' version '2.2.6.RELEASE'
    id 'com.palantir.docker' version "0.22.1"
    id 'com.palantir.docker-run' version '0.22.1'
    id 'com.palantir.docker-compose' version '0.22.1'
}

docker {
    name "picstories/gateway-service:virusmaster"
    files 'build/libs/gateway-service-1.0-SNAPSHOT.jar'
    dockerfile file('Dockerfile')
    tag 'DockerHub', 'virusmaster'
    pull true
    noCache true
}

dockerRun {
    name "picstories/gateway-service:virusmaster"
    image "gateway-service"
    ports "7000:7000"
    clean true
}

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'maven'
apply plugin: 'java-library-distribution'
group 'org.picstories.gateway'
version '1.0-SNAPSHOT'

repositories {
    mavenCentral()
    mavenLocal()
}

dependencies {
    implementation group: 'org.springframework.cloud', name: 'spring-cloud-starter-gateway', version: '2.2.2.RELEASE'
    implementation group: 'org.springframework.cloud', name: 'spring-cloud-starter-config', version: '2.2.2.RELEASE'
    implementation group: 'org.springframework.cloud', name: 'spring-cloud-starter-sleuth', version: '2.2.0.RELEASE'
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-webflux', version: '2.2.5.RELEASE'
    implementation group: 'org.springframework.cloud', name: 'spring-cloud-dependencies', version: 'Greenwich.SR3', ext: 'pom'

    testCompile group: 'junit', name: 'junit', version: '4.12'
}

distZip.shouldRunAfter(build)

jar {
    exclude 'META-INF/*.SF', 'META-INF/*.DSA', 'META-INF/*.RSA', 'META-INF/*.MF'
    manifest {
        attributes 'Main-Class': 'org.picstories.gateway.GatewayApplication',
                'Class-Path': configurations.runtime.files.collect { "lib/$it.name" }.join(' ')
    }
}